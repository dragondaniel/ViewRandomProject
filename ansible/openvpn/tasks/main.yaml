- name: "update"
  shell: yum update -y

- name: "EPEL2"
  shell: yum install epel-release -y

- name: "update after"
  shell: yum update -y


- name: "Openvpn: Install dependencies.(CentOS)"
  yum: pkg={{ item }} state=present
  with_items:
  - openvpn
  - expect
  - openssl
  - automake
  - libtool
  - pam-devel
  - wget
  - iptables
  - iptables-services
  - dnf-automatic
  - net-tools
  - bind-utils
  - nc
  - mtr
  - easy-rsa
  when: ansible_distribution == 'CentOS'

- name: "Create User"
  user:
    name="{{ item.name }}"
    comment="{{ item.comment }}"
    shell="{{ item.shell }}"
    system="yes"
    state="present"
    createhome="{{ item.createhome }}"
    uid="{{ item.uid }}"
  with_items:
    - { name: 'vpndata', comment: 'Vpndata', shell: '/bin/sh', createhome: 'yes', uid: '451' }

- name: "create easyrsa"
  file:
    path: /usr/local/src/easyrsa
    state: directory

#- name: "Checkout easyrsa"
#  git: clone="yes" repo="https://github.com/OpenVPN/easy-rsa" dest="/usr/local/src/easyrsa"

#- name: "wget latest"
#  get_url:
#    url: https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.6/EasyRSA-unix-v3.0.6.tgz
#    dest: /usr/local/src/easyrsa

#- name: "untar the file"
#  shell: cd /usr/local/src/easyrsa; tar -xvf EasyRSA-unix-v3.0.6.tgz

#- name: "Copy easyrsa3 to openvpn"
#  shell: >
#    cp -r /usr/local/src/easyrsa/EasyRSA-v3.0.6 /etc/openvpn/easyrsa
#  args:
#    creates: /etc/openvpn/easyrsa

- name: "Copy easyrsa3 to openvpn"
  shell: >
    cp -r /usr/share/easy-rsa/3.0.8 /etc/openvpn/easyrsa
  args:
    creates: /etc/openvpn/easyrsa

    
- name: "Upload easyrsa vars"
  template: src="etc/openvpn/easyrsa/vars.j2" dest="/etc/openvpn/easyrsa/vars"
  
#- name: "Upload build-ca script"
#  template: src="etc/openvpn/easyrsa/build-ca-script.exp.j2" dest="/etc/openvpn/easyrsa/build-ca-script.exp" mode="0750"

- name: "Init PKI"
  shell: >
    ./easyrsa init-pki
  args:
    creates: /etc/openvpn/easyrsa/pki
    chdir: /etc/openvpn/easyrsa
- pause: minutes=2
#- name: "Setup CA Certificate"
#  shell: >
#    ./easyrsa build-ca nopass
#  args:
#    creates: /etc/openvpn/easyrsa/pki/ca.crt
#    chdir: /etc/openvpn/easyrsa

- name: "Stat dh"
  stat: path=/etc/openvpn/easyrsa/pki/dh.pem
  register: dh_stat

- name: "Build Diffie Hellman"
  shell: chdir=/etc/openvpn/easyrsa nohup ./easyrsa gen-dh
  async: 45
  poll: 0
  when: dh_stat.stat.exists == False
    
- name: "Setup Server keys"
  shell: >
    ./easyrsa build-server-full server nopass
  args:
    chdir: /etc/openvpn/easyrsa

- name: "Setup Client Certificate"
  shell: >
    ./easyrsa build-client-full client nopass
  args:
    chdir: /etc/openvpn/easyrsa

- name: "Generate the certificate revocation list:"
  shell: >
    ./easyrsa gen-crl
  args:
    chdir: /etc/openvpn/easyrsa    

- name: "Setup ta Cert"
  shell: >
    openvpn --genkey --secret /etc/openvpn/easyrsa/pki/private/ta.key
  args:
    creates: /etc/openvpn/easyrsa/pki/private/ta.key
    chdir: /etc/openvpn/easyrsa/pki/private

- name: "Upload OpenVPN Server Config"
  template: src="etc/openvpn/server.conf.j2" dest="/etc/openvpn/server.conf" mode="0750" owner="vpndata" group="vpndata"

- name: "Create Log Dir"
  file: path="/var/log/openvpn" state="directory" mode="0750" owner="vpndata" group="vpndata"

- name: "Create CCD"
  file: path="/etc/openvpn/ccd" state="directory" mode="0750" owner="vpndata" group="vpndata"

- name: "Checkout Google Authenticator"
  git: clone="yes" repo="https://github.com/google/google-authenticator-libpam" dest="/usr/local/src/google-authenticator"
  when: two_fa is defined

- name: "Auto-reconf Google Auth"
  shell: >
    autoreconf --install
  args:
    chdir: /usr/local/src/google-authenticator/
  when: two_fa is defined

- name: "Configure Google Auth"
  shell: >
    ./configure
  args:
    chdir: /usr/local/src/google-authenticator/
  when: two_fa is defined

- name: "Make Google Auth"
  shell: >
    make
  args:
    chdir: /usr/local/src/google-authenticator/
  when: two_fa is defined

- name: "Install Google Auth"
  shell: >
    make install
  args:
    chdir: /usr/local/src/google-authenticator/
  when: two_fa is defined

- name: "Upload OpenVPN Server Config"
  template: src="etc/pam.d/openvpn.j2" dest="/etc/pam.d/openvpn" mode="0644" owner="root" group="root"

- name: "Template Client Config"
  template: src="etc/openvpn/client.ovpn.j2" dest="/etc/openvpn/client.ovpn" mode="0644"

- name: "Update to home as well"
  template: src="etc/openvpn/client.ovpn.j2" dest="/etc/skel/openhome.ovpn" mode="0644"

- name: "copy ca to skel"
  shell: >
    cp /etc/openvpn/easyrsa/pki/ca.crt /etc/skel

- name: "copy ta to skel"
  shell: >
    cp /etc/openvpn/easyrsa/pki/private/ta.key /etc/skel

- name: "create group"
  shell: >
    groupadd nogroup

- name: "Tar a client config up"
  shell: >
    tar -pczvf client.tar.gz client.ovpn easyrsa/pki/ca.crt easyrsa/pki/issued/client.crt easyrsa/pki/private/client.key easyrsa/pki/private/ta.key
  args:
    creates: /etc/openvpn/client.tar.gz
    chdir: /etc/openvpn/
    
- name: "Download the client config"
  fetch: src="/etc/openvpn/client.tar.gz" dest="~/Downloads/"
  
- name: "Check networing var"
  lineinfile: dest="/etc/sysconfig/network" regexp="^NETWORKING" line="NETWORKING=YES"

- name: "add des"
  lineinfile:
    path: /etc/sysctl.conf
    line: '# Packet forwarding'

- name: "add extra info"
  lineinfile:
    path: /etc/sysctl.conf
    line: net.ipv4.ip_forward = 1

- name: "enable ip forwarding"
  shell: sysctl -p

- name: "upload iptables rules"
  template: src="usr/local/bin/ipTables.j2" dest="/usr/local/bin/ipTables.sh" mode="0755"

- name: "run iptables"
  shell: cd /usr/local/bin; ./ipTables.sh

#-name: "run as service check"
# shell: systemctl enable iptables; systemctl start iptables;service iptables save


- name: "Start OpenVPN"
  service: name=openvpn state=restarted
